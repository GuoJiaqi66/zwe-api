<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.zwsave.zweapi.db.dao.UserDao">
  <resultMap id="BaseResultMap" type="top.zwsave.zweapi.db.pojo.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="img_path" jdbcType="VARCHAR" property="imgPath" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="fans_count" jdbcType="INTEGER" property="fansCount" />
    <result column="follow_count" jdbcType="INTEGER" property="followCount" />
    <result column="ranking" jdbcType="INTEGER" property="ranking" />
  </resultMap>
  <sql id="Base_Column_List">
    id, nickname, mail, login_name, `password`, img_path, create_time, fans_count, follow_count, 
    ranking
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="top.zwsave.zweapi.db.pojo.User">
    insert into user (id, nickname, mail, 
      login_name, `password`, img_path, 
      create_time, fans_count, follow_count, 
      ranking)
    values (#{id,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, 
      #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{imgPath,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{fansCount,jdbcType=INTEGER}, #{followCount,jdbcType=INTEGER}, 
      #{ranking,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="top.zwsave.zweapi.db.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="imgPath != null">
        img_path,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="fansCount != null">
        fans_count,
      </if>
      <if test="followCount != null">
        follow_count,
      </if>
      <if test="ranking != null">
        ranking,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="imgPath != null">
        #{imgPath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fansCount != null">
        #{fansCount,jdbcType=INTEGER},
      </if>
      <if test="followCount != null">
        #{followCount,jdbcType=INTEGER},
      </if>
      <if test="ranking != null">
        #{ranking,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.zwsave.zweapi.db.pojo.User">
    update user
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="imgPath != null">
        img_path = #{imgPath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fansCount != null">
        fans_count = #{fansCount,jdbcType=INTEGER},
      </if>
      <if test="followCount != null">
        follow_count = #{followCount,jdbcType=INTEGER},
      </if>
      <if test="ranking != null">
        ranking = #{ranking,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.zwsave.zweapi.db.pojo.User">
    update user
    set nickname = #{nickname,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      img_path = #{imgPath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      fans_count = #{fansCount,jdbcType=INTEGER},
      follow_count = #{followCount,jdbcType=INTEGER},
      ranking = #{ranking,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
	
	
	
	<!-- 自己写的 -->
	<select id="selectUserByLoginName" parameterType="String" resultType="top.zwsave.zweapi.db.pojo.User">
		select id, nickname, mail, login_name, password, img_path, create_time, fans_count, follow_count, ranking
		from user where login_name = #{loginName}
	</select>
	<select id="selectTotalUser" resultType="Integer">
		select count(id) from user ;
	</select>
	
	<update id="updateUserInfoById" parameterType="top.zwsave.zweapi.controller.form.UserRepairInfo">
		UPDATE user
		<set>
			<if test="nickname != null">
				nickname = #{nickname},
			</if>
			<if test="mail != null">
				mail = #{mail},
			</if>
			<if test="password != null">
				password = #{password},
			</if>
			<if test="imgPath != null">
				img_path = #{imgPath}
			</if>
		</set>
		where id = #{id}
	</update>
	
	<select id="selectUserById" parameterType="Long" resultType="String">
		select login_name
		from user
		where id = #{id}
		limit 1
	</select>
	
	<update id="updataFaceImg" parameterType="Map">
		update user
		set img_path = #{imgPath}
		where id = #{id}
	</update>
	
	<update id="userFollowAdd" parameterType="Long">
		update user
		set follow_count = follow_count + 1
		where id = #{id}
	</update>
	<update id="userFollowRemove" parameterType="Long">
		update user
		set follow_count = follow_count - 1
		where id = #{id}
	</update>
	
	<select id="selectUsetStatus" parameterType="Long" resultType="String">
		select status
		from user
		where id = #{id}
	</select>
	
	<update id="userFansAdd" parameterType="Long">
		update user
		set fans_count = fans_count + 1
		where id = #{id}
	</update>
	<update id="userFansRemove" parameterType="Long">
		update user
		set fans_count = fans_count - 1
		where id = #{id}
	</update>
</mapper>