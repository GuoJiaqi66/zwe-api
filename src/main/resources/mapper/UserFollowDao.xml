<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.zwsave.zweapi.db.dao.UserFollowDao">
  <resultMap id="BaseResultMap" type="top.zwsave.zweapi.db.pojo.UserFollow">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="delete" jdbcType="OTHER" property="delete" />
    <result column="usered_id" jdbcType="BIGINT" property="useredId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, `delete`, usered_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_follow
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_follow
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="top.zwsave.zweapi.db.pojo.UserFollow">
    insert into user_follow (id, user_id, `delete`, 
      usered_id, create_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{delete,jdbcType=OTHER}, 
      #{useredId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="top.zwsave.zweapi.db.pojo.UserFollow">
    insert into user_follow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="delete != null">
        `delete`,
      </if>
      <if test="useredId != null">
        usered_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="delete != null">
        #{delete,jdbcType=OTHER},
      </if>
      <if test="useredId != null">
        #{useredId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.zwsave.zweapi.db.pojo.UserFollow">
    update user_follow
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="delete != null">
        `delete` = #{delete,jdbcType=OTHER},
      </if>
      <if test="useredId != null">
        usered_id = #{useredId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.zwsave.zweapi.db.pojo.UserFollow">
    update user_follow
    set user_id = #{userId,jdbcType=BIGINT},
      `delete` = #{delete,jdbcType=OTHER},
      usered_id = #{useredId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
	
	<select id="selectNoteByUseredId" parameterType="HashMap" resultType="top.zwsave.zweapi.db.pojo.UserFollow">
		select *
		from user_follow
		where usered_id = #{useredId} and user_id = #{userId}
	</select>
	
	<select id="selectAllFans" resultType="HashMap">
		select u.img_path, f.create_time, u.nickname
		FROM `user` u
		RIGHT JOIN user_follow f
		on u.id = f.user_id
		WHERE u.id =
		(select user_id
		FROM user_follow
		where usered_id = #{userId} and `delete` = "0"
		) and `status` = "0" and f.`delete` = "0"
	</select>
	
	<update id="removeFollow" parameterType="Long">
		update user_follow
		set `delete` = "1"
		where user_id = #{userId} and usered_id = #{id}
	</update>
	
	<update id="updataFollow" parameterType="HashMap">
		update user_follow
		set `delete` = "0", create_time = #{createTime}
		where id = #{id}
	</update>
</mapper>